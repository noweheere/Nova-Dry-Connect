
{
  "common": {
    "edit": "Editar",
    "start": "Iniciar",
    "pause": "Pausar",
    "resume": "Reanudar",
    "stop": "Detener",
    "save": "Guardar",
    "reset": "Restablecer a valores predeterminados",
    "step": "Paso",
    "target": "Objetivo"
  },
  "nav": {
    "dashboard": "Dashboard",
    "recipes": "Recetas",
    "logbook": "Bitácora",
    "terminal": "Terminal",
    "guide": "Guía",
    "hardware": "Hardware",
    "settings": "Ajustes"
  },
  "header": {
    "title": "NovaDry Connect",
    "connected": "Conectado",
    "disconnected": "Desconectado",
    "connect": "Conectar",
    "disconnect": "Desconectar"
  },
  "connectionModal": {
    "title": "Elija el método de conexión",
    "description": "Seleccione cómo desea conectarse al sistema NovaDry.",
    "serialTitle": "Conectar vía Serial (RS-232)",
    "serialDescription": "Conéctese directamente al hardware de su liofilizador mediante un adaptador de USB a Serial.",
    "demoTitle": "Usar Modo Demo",
    "demoDescription": "Ejecute un proceso simulado sin hardware. Ideal para probar y explorar la aplicación."
  },
  "dashboard": {
    "welcomeTitle": "Bienvenido a NovaDry Connect",
    "welcomeSubtitle": "Su centro para la liofilización de precisión.",
    "connectMessage": "Por favor, conéctese a su liofilizador NovaLabs para comenzar.",
    "lastBatchTitle": "Resumen del último lote",
    "name": "Nombre",
    "quantity": "Cantidad",
    "recipe": "Receta",
    "completedOn": "Completado el"
  },
  "processMonitor": {
    "systemIdle": "Sistema inactivo",
    "startFromRecipes": "Inicie un nuevo lote desde la pantalla de Recetas.",
    "temperature": "Temperatura",
    "pressure": "Presión",
    "elapsedTime": "Tiempo transcurrido"
  },
  "recipes": {
    "title": "Recetas",
    "newRecipe": "Nueva Receta",
    "disconnectedWarningTitle": "Dispositivo desconectado",
    "disconnectedWarningBody": "Por favor, conéctese al secador para iniciar un proceso.",
    "startProcessTooltip": "Conecte el secador para iniciar"
  },
  "logbook": {
    "title": "Bitácora de Lotes",
    "addManualEntry": "Añadir entrada manual",
    "noBatchesTitle": "No hay lotes registrados",
    "noBatchesBody": "Los procesos completados aparecerán aquí.",
    "ranOn": "Ejecutado el",
    "with": "con",
    "quantity": "Cantidad",
    "sieves": "Tamices",
    "washCycles": "Ciclos de lavado",
    "trayType": "Tipo de bandeja",
    "notes": "Notas",
    "noNotes": "No hay notas para este lote."
  },
  "settings": {
    "title": "Ajustes",
    "header": "Parámetros predeterminados",
    "description": "Estos valores se utilizan como base para nuevas recetas, basados en la configuración estándar de Harvest Right. Ajústelos a sus necesidades.",
    "freezeTemp": "Temp. de congelación predeterminada (°C)",
    "dryTemp": "Temp. de secado final predeterminada (°C)",
    "pressure": "Presión de vacío predeterminada (mTorr)",
    "extraDryTime": "Tiempo de secado extra predeterminado (minutos)"
  },
  "guide": {
    "title": "Guías e Información",
    "prep": {
      "title": "Guía de preparación de Bubble Hash",
      "p1": "La preparación adecuada es clave para una liofilización exitosa. Siga estos pasos para obtener resultados óptimos:",
      "steps": [
        "Recolectar y tamizar: Después de lavar, recolecte su hachís de las diferentes bolsas de micras. Presione suavemente para eliminar el exceso de agua.",
        "Microplane/Tamiz: Congele la pastilla de hachís recolectada hasta que esté sólida. Una vez congelada, rállela hasta obtener un polvo fino usando un microplane o pásela por un colador de acero inoxidable. Esto aumenta drásticamente la superficie para un secado uniforme.",
        "Pre-congelar bandejas: Coloque papel pergamino en las bandejas de su liofilizador y póngalas en un congelador estándar para que se enfríen antes de cargar el hachís.",
        "Cargar bandejas: Espolvoree el hachís en polvo de manera uniforme y delgada sobre las bandejas frías forradas con pergamino. Evite grumos y montones gruesos.",
        "Cargar en el secador: Transfiera inmediatamente las bandejas cargadas al liofilizador NovaLabs y comience el ciclo seleccionado."
      ]
    },
    "trays": {
      "title": "Entendiendo los tipos de bandejas",
      "p1": "El tipo de bandeja que utilice puede influir en el proceso de secado. Aquí hay algunos tipos comunes:",
      "p2": "Para el bubble hash, las bandejas de <strong>acero inoxidable estándar</strong> forradas con papel pergamino son la opción más común y efectiva. Proporcionan una excelente conductividad térmica."
    },
    "timer": {
      "title": "Temporizador y Recordatorio",
      "p1": "Recuerde configurar temporizadores para sus ciclos de lavado para mantener la consistencia.",
      "p2": "Se agregará una función de temporizador dedicada en una actualización futura."
    }
  },
  "hardware": {
    "title": "Guía de Integración de Hardware",
    "common": {
      "wiringTitle": "Cómo Conectar",
      "wiringDiagram": "Adaptador FTDI      Microcontrolador\n+-----------+       +-----------+\n|      GND  |-------|  GND      |\n|      RXD  |-------|  TXD      |\n|      TXD  |-------|  RXD      |\n|      5V   |       |           |\n+-----------+       +-----------+",
      "driversTitle": "Descargas de Controladores",
      "testButton": "Probar Conexión",
      "deviceFound": "¡Dispositivo encontrado y permiso concedido!",
      "apiNotSupported": "La API Web Serial no es compatible con este navegador.",
      "error": "Error",
      "copied": "¡Copiado al portapapeles!",
      "copyCommand": "Copiar Comando"
    },
    "intro": {
      "title": "Listar Puertos Disponibles",
      "p1": "La API Web Serial permite que las aplicaciones web se comuniquen con dispositivos seriales. Antes de conectarse, puede obtener una lista de los puertos a los que el usuario ha otorgado acceso previamente.",
      "p2": "El siguiente fragmento de código demuestra cómo recuperar y mostrar información sobre los puertos seriales ya permitidos.",
      "code": "async function listGrantedPorts() {\n  if ('serial' in navigator) {\n    const ports = await navigator.serial.getPorts();\n    console.log(`Se encontraron ${ports.length} puertos permitidos.`);\n    for (const port of ports) {\n      const info = port.getInfo();\n      console.log('Info del puerto:', info);\n      // info contiene usbVendorId y usbProductId\n    }\n  } else {\n    console.error('La API Web Serial no es compatible.');\n  }\n}\nlistGrantedPorts();"
    },
    "troubleshooting": {
      "title": "Solución de Problemas",
      "p1": "Si tiene problemas para conectarse a un dispositivo, aquí hay algunos pasos para diagnosticar el problema.",
      "deviceManager": {
        "title": "Usando el Administrador de Dispositivos de Windows",
        "steps": [
          "Presione <strong>Win + R</strong> para abrir el diálogo Ejecutar.",
          "Escriba <strong>devmgmt.msc</strong> y presione Enter.",
          "Expanda la sección 'Puertos (COM & LPT)'.",
          "Busque su dispositivo. Si tiene un signo de exclamación amarillo, hay un problema con el controlador. Haga clic derecho sobre él y seleccione 'Actualizar controlador'."
        ]
      },
      "general": {
        "title": "Comprobaciones Generales",
        "steps": [
          "Asegúrese de que el cable USB esté bien conectado tanto al dispositivo como al ordenador.",
          "Pruebe un puerto USB y un cable diferentes si es posible.",
          "Verifique que ha instalado los controladores correctos para su sistema operativo.",
          "Cierre cualquier otro software que pueda estar utilizando el puerto COM (por ejemplo, Arduino IDE, otros programas de terminal)."
        ]
      }
    },
    "detection": {
      "title": "Detección Automática de Dispositivos (VID/PID)",
      "p1": "La forma más confiable de identificar un dispositivo específico es mediante su ID de Vendedor (VID) y su ID de Producto (PID) de USB. Puede pedirle al usuario que seleccione un dispositivo que coincida con un par VID/PID específico.",
      "p2": "Este es el método principal utilizado para diferenciar entre varios tipos de adaptadores seriales.",
      "code": "async function requestPortWithFilters(filters) {\n  try {\n    // Solicitar al usuario que seleccione un puerto que coincida con los filtros.\n    const port = await navigator.serial.requestPort({ filters });\n    const info = port.getInfo();\n    console.log(`Vendor ID: ${info.usbVendorId}, Product ID: ${info.usbProductId}`);\n    return port;\n  } catch (error) {\n    console.error('No se seleccionó ningún puerto o ocurrió un error:', error);\n  }\n}\n\n// Ejemplo: const filters = [{ usbVendorId: 0x1234, usbProductId: 0x5678 }];\n// requestPortWithFilters(filters);"
    },
    "ftdi": {
      "title": "Adaptadores FTDI",
      "p1": "FTDI (Future Technology Devices International) es un fabricante muy común de chips convertidores de USB a Serial. Su ID de Vendedor oficial es 0x0403.",
      "codeTitle": "Buscar Dispositivos FTDI",
      "code": "const ftdiFilters = [{ usbVendorId: 0x0403 }];\n\nasync function connectToFTDI() {\n  const port = await navigator.serial.requestPort({ filters: ftdiFilters });\n  if (!port) return;\n\n  await port.open({ baudRate: 9600 });\n  console.log('¡Conectado a un dispositivo FTDI!');\n  \n  // Ejemplo: Escribir datos\n  const writer = port.writable.getWriter();\n  const data = new Uint8Array([0x48, 0x6f, 0x6c, 0x61]); // 'Hola'\n  await writer.write(data);\n  writer.releaseLock();\n}\n\nconnectToFTDI();"
    },
    "generic": {
      "title": "Adaptadores Genéricos (CH340/CP210x)",
      "p1": "Muchos microcontroladores y adaptadores económicos utilizan chips como el WCH CH340 o el Silicon Labs CP210x. Tienen sus propios ID de Vendedor distintos.",
      "listTitle": "VIDs Comunes:",
      "vid1": "CH340/CH341: 0x1A86",
      "vid2": "CP210x: 0x10C4",
      "codeTitle": "Buscar Adaptadores Genéricos Comunes",
      "code": "const genericFilters = [\n  { usbVendorId: 0x1A86 }, // CH340\n  { usbVendorId: 0x10C4 }, // CP210x\n];\n\nasync function connectToGeneric() {\n  const port = await navigator.serial.requestPort({ filters: genericFilters });\n  if (!port) return;\n  // ... lógica de conexión similar a FTDI ...\n  console.log('¡Conectado a un adaptador serial genérico!');\n}\n\nconnectToGeneric();"
    },
    "stlink": {
      "title": "Depuradores ST-Link",
      "p1": "Los programadores ST-Link, utilizados para microcontroladores STM32, a menudo incluyen un Puerto COM Virtual (VCP) para la comunicación serial. El ID de Vendedor para STMicroelectronics es 0x0483.",
      "driverInfo": "Los controladores se incluyen normalmente con STM32CubeProgrammer o el paquete de controladores ST-LINK.",
      "listTitle": "PIDs Comunes:",
      "pid1": "ST-Link/V2: 0x3748",
      "pid2": "ST-Link/V2.1: 0x374B",
      "pid3": "ST-LINK-V3: 0x374F, 0x3752",
      "codeTitle": "Buscar ST-Link VCP",
      "code": "const stlinkFilters = [\n  { usbVendorId: 0x0483, usbProductId: 0x3748 },\n  { usbVendorId: 0x0483, usbProductId: 0x374B },\n  { usbVendorId: 0x0483, usbProductId: 0x374F },\n  { usbVendorId: 0x0483, usbProductId: 0x3752 },\n];\n\nasync function connectToSTLink() {\n  const port = await navigator.serial.requestPort({ filters: stlinkFilters });\n  if (!port) return;\n  console.log('¡Conectado al Puerto COM Virtual de ST-Link!');\n}\n\nconnectToSTLink();"
    },
    "buspirate": {
      "title": "Bus Pirate",
      "p1": "El Bus Pirate es una herramienta versátil de depuración de hardware que se comunica a través de una consola serial. Tiene un VID/PID específico y una interfaz de comandos basada en texto.",
      "driverInfo": "El Bus Pirate utiliza un chip FTDI, por lo que se requieren los controladores VCP de FTDI.",
      "listTitle": "VID/PID:",
      "vidpid": "VID: 0x04D8, PID: 0xFB00 (v3/v4)",
      "codeTitle": "Comunicarse con Bus Pirate",
      "code": "const busPirateFilter = [{ usbVendorId: 0x04D8, usbProductId: 0xFB00 }];\n\nasync function talkToBusPirate() {\n  const port = await navigator.serial.requestPort({ filters: busPirateFilter });\n  if (!port) return;\n  await port.open({ baudRate: 115200 });\n\n  const writer = port.writable.getWriter();\n  const reader = port.readable.getReader();\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder();\n\n  // Entrar en modo bitbang crudo\n  await writer.write(encoder.encode('\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n')); // Enviar 10 saltos de línea para reiniciar\n  await new Promise(r => setTimeout(r, 50)); // Esperar al reinicio\n\n  // Enviar 'i' para info\n  await writer.write(encoder.encode('i\\n'));\n\n  // Leer respuesta\n  const { value } = await reader.read();\n  console.log(decoder.decode(value));\n\n  writer.releaseLock();\n  reader.releaseLock();\n}\n\ntalkToBusPirate();"
    },
    "flipper": {
      "title": "Flipper Zero",
      "p1": "El Flipper Zero proporciona una interfaz de línea de comandos (CLI) a través de su puerto serial USB, permitiendo el control programático y la recuperación de información.",
      "driverInfo": "Los controladores se instalan normalmente de forma automática con la aplicación qFlipper.",
      "listTitle": "VID/PID:",
      "vidpid": "VID: 0x0483, PID: 0x5740",
      "codeTitle": "Obtener Información del Dispositivo Flipper Zero",
      "code": "const flipperFilter = [{ usbVendorId: 0x0483, usbProductId: 0x5740 }];\n\nasync function getFlipperInfo() {\n  const port = await navigator.serial.requestPort({ filters: flipperFilter });\n  if (!port) return;\n  await port.open({ baudRate: 115200 });\n\n  const writer = port.writable.getWriter();\n  const reader = port.readable.getReader();\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder();\n\n  // Enviar comando 'device_info' con retorno de carro\n  await writer.write(encoder.encode('device_info\\r'));\n  \n  // Leer respuesta hasta que aparezca el prompt '>'\n  let response = '';\n  while (!response.includes('>')) {\n    const { value, done } = await reader.read();\n    if (done) break;\n    response += decoder.decode(value, { stream: true });\n  }\n  console.log(response);\n  \n  writer.releaseLock();\n  reader.releaseLock();\n}\n\ngetFlipperInfo();"
    }
  },
  "terminal": {
    "title": "Terminal del Dispositivo",
    "offlineTitle": "Terminal fuera de línea",
    "offlineBody": "Conéctese a un dispositivo para ver datos en vivo.",
    "welcome1": "Bienvenido a la Terminal de NovaDry.",
    "welcome2": "Los datos brutos del dispositivo aparecerán aquí cuando esté conectado."
  },
  "app": {
    "connectFirstWarning": "Por favor, conéctese primero al secador o espere a que finalice el proceso actual."
  }
}